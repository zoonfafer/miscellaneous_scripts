#!/bin/bash

# A script to maintain a set of symbolic links in the specified directory.
#
# Given a source directory and a list of relative path names (relative to the 
# source directory) and a destination directory, the program should generate a 
# symbolic link for each of the path in the list at the destination directory 
# pointing to the path of the same name at the source directory.
#
# == Motivation
# I want to have an easy way to work with the many plugins installed with 
# vim-pathogen.
#
# Jeffrey Lau
# 2011-08-10

SRC_DIR=/opt/src/vim-bundle
DST_DIR=~/.vim/bundle

# SRC_LN: e.g., $SRC_DIR/.yo -> $DST_DIR
SRC_LN=.src

# DST_LN: e.g., $DST_DIR/.src -> $SRC_DIR
DST_LN=.yo

# create the LNs if not exists
function create_lnln() {
    src="$1"
    dst_ln="$2"
    dst="$3"

    if [[ -w "${src}" ]]; then

	ln_path="${src}/${dst_ln}"
	# echo "ln path is $ln_path"

	if [[ ! -e "${ln_path}" ]]; then

	    pushd "${src}" >/dev/null
	    # echo 'lol'
	    ln -s "${dst}" "${dst_ln}"
	    popd >/dev/null

	elif [[ ! -L "${ln_path}" ]]; then

	    echo "Error:- something \`${ln_path}' exists already --- cannot create symlink with same name" >&2
	    exit 2

	else
	    # Oh, another symlink exists already!
	    # Let's compare them to see if they reference the same thing.

	    resolved_dst_dir="`cd "${dst}" ; pwd -P`"
	    # echo "resolving $dst"
	    # echo ${resolved_dst_dir}

	    resolved_ln_path="`cd "${ln_path}" ; pwd -P`"
	    # echo "resolving $ln_path"
	    # echo ${resolved_ln_path}

	    if [[ "${resolved_dst_dir}" != "${resolved_ln_path}" ]]; then
		echo "Error:- a different symlink to \`${resolved_ln_path}' exists already --- cannot decide what to do!" >&2
		exit 2
	    fi
	fi
    fi
}

create_lnln "${SRC_DIR}" "${DST_LN}" "${DST_DIR}"
create_lnln "${DST_DIR}" "${SRC_LN}" "${SRC_DIR}"

# TODO: read from a config file or something
LIST="
Command-T
delimitMate
ensime
nerdcommenter
nerdtree
snipmate-snippets
snipmate.vim
syntastic
taglist.vim
tlib_vim
tplugin_vim
vim-abolish
vim-addon-mw-utils
vim-align
vim-conque
vim-endwise
vim-fuzzyfinder
vim-git
vim-javascript
vim-l9
vim-ragtag
vim-repeat
vim-scala.zfp
vim-simplefold
vim-space
vim-sparkup
vim-surround
vim-taglist-plus
vim-textobj-user
vim-trailing-whitespace
vim-unimpaired
vim-vspec
"

# LIST=""

# CREATION
# TODO: use the dot LNs.
#
for i in $LIST; do
    # echo "---> $i "
    SRC_PATH="${SRC_DIR}/${i}"

    # bail if source doesn't exist
    if [[ ! -r $SRC_PATH ]]; then
	echo "Error: source ain't readable" >&2
	exit 2
    fi

    if [[ ! -r "${DST_DIR}/${i}" ]]; then
	pushd ${DST_DIR} >/dev/null
	# ln -s ${SRC_PATH} .
	#
	# prefer the extra indirection
	ln -s "${SRC_LN}"/"${i}" .
	popd >/dev/null
    # else
	# echo "Error: destination exists already!!!1" >&2
	# exit 2
    fi
done

# DESTRUCTION
# 
# Remove all symlinks if they can be found in $SRC_DIR but are not in the 
# LIST.

for i in ${DST_DIR}/*; do
    last_bit=${i##*/}
    # echo "===> $last_bit"

    POSSIBLE="${SRC_DIR}/${last_bit}"
    if [[ -r $POSSIBLE ]]; then
	# echo "hey you!"
	if [[ ! `echo $LIST | grep ${last_bit}` ]]; then
	    # echo "YES YOU!!!1"
	    rm "${i}"
	fi
    fi
done

exit 0
